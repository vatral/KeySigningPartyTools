#!/usr/bin/perl -w
use strict;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Getopt::Long;
use KeySigningParty::GPG;


my ($output);
my ($cmd_help);
my ($opt_errors_only, $opt_quiet);
$| = 1;

GetOptions("output|o=s"       => \$output,
           "help|h"           => \$cmd_help,
           "quiet|q"          => \$opt_quiet,
           "errors-only|e"    => \$opt_errors_only)
	or die "Getopt failed: $!";

if ( $cmd_help ) {
	print <<HELP;
Usage: $0 [options] keylist

Verifies that the keys in the keyring have the fingerprints indicated in
the keylist.

Options:
	--output, -o file  Send output to file instead of stdout
	--quiet, -q        Do not output anything
	--errors-only, -e  Only output errors

Return code:
	0   Everything went fine
	1   Execution error
	2   Missing key detected
	4   Bad fingerprint detected

The missing key and bad fingerprint errors may be combined if both errors
are detected during execution.

HELP
	exit(0);
}

my $input = shift @ARGV;
my ($in, $out);

if ( $input ) {
	open($in, '<', $input) or die "Can't open $input: $!";
} else {
	die "Input file required, try --help for help";
}

if ( $output ) {
	open($out, '>', $output) or die "Can't open $output: $!";
} else {
	open($out, '>&STDOUT') or die "Can't dup STDOUT: $!";
}


my $gpg = new KeySigningParty::GPG();
my $missing_key_err;
my $bad_fp_err;

while( my $line = <$in> ) {
	chomp $line;
	my ($uid, $fingerprint, $name) = split(/:/, $line);

	print $out "$uid: " unless ($opt_quiet || $opt_errors_only);

	if ( !$gpg->key_exists($uid) ) {
		print $out "$uid: " if ( $opt_errors_only );
		print $out "NO KEY\n" unless ($opt_quiet);
		$missing_key_err = 1;
	} elsif ( !$gpg->check_fingerprint($uid, $fingerprint)) {
		print $out "$uid: " if ( $opt_errors_only );
		print $out "BAD FINGERPRINT\n" unless ($opt_quiet);
		$bad_fp_err = 1;
	} else {
		print $out "OK\n" unless ($opt_errors_only || $opt_quiet);
	}
}

my $ret = 0;
$ret |= 0x02 if ( $missing_key_err );
$ret |= 0x04 if ( $bad_fp_err );

exit($ret);
